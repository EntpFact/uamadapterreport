server:
  port: ${PORT:8099}
  shutdown: ${APP_SHUTDOWN_TYPE:graceful}

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}
  endpoint:
    health:
      probes:
        enabled: ${MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED:true}

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    com.zaxxer.hikari: INFO
    org.springframework.boot.autoconfigure.jdbc: INFO

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://34.135.239.235:5432/postgresdb?ApplicationName=uamreporting&currentSchema=public}
    username: ${SPRING_DATASOURCE_USERNAME:admin}
    password: ${SPRING_DATASOURCE_PASSWORD:test123}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

    hikari:
      minimum-idle: ${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE:5}
      maximum-pool-size: ${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE:20}
      connection-timeout: ${SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT:60000}
      max-lifetime: ${SPRING_DATASOURCE_HIKARI_MAX_LIFETIME:1800000}
      idle-timeout: ${SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT:180000}


report:
  directory: ${REPORT_DIRECTORY:D:/testfile}
  scheduler:
    cron: ${REPORT_SCHEDULER_CRON:0 0 0 * * ?}
  csv:
    delimiter: ${REPORT_CSV_DELIMITER:,}
  cleanup:
    retry-count: ${REPORT_CLEANUP_RETRYCOUNT:3}
    retry-delay-ms: ${REPORT_CLEANUP_RETRYDELAY:500}
sftp:
  #host: ${SFTP_HOST:35.226.240.30}
  #port: ${SFTP_PORT:22}
  #username: ${SFTP_USERNAME:demo}
  #password: ${SFTP_PASSWORD:demo}
  #directory: ${SFTP_DIRECTORY:/sftp/adapter/UAM_Reports}
  #private-key: ${SFTP_PRIVATE_KEY:}
  host: ${SFTP_HOST:localhost}
  port: ${SFTP_PORT:2222}
  username: ${SFTP_USERNAME:testuser}
  password: ${SFTP_PASSWORD:demo}
  directory: ${SFTP_DIRECTORY:/upload}
  private-key: ${SFTP_PRIVATE_KEY:}

email:
  rest:
    url: ${EMAIL_REST_URL:http://emailservice.e-pricing.svc.cluster.local:10015/email}

applications:
  epricing:
    success:
      to: ${APPLICATION_EPRICING_SUCCESS_TO:team@example.com}
      from: ${APPLICATION_EPRICING_SUCCESS_FROM:noreply@example.com}
      cc: ${APPLICATION_EPRICING_SUCCESS_CC:manager@example.com}
      bcc: ${APPLICATION_EPRICING_SUCCESS_BCC:audit@example.com}
      subject: ${APPLICATION_EPRICING_SUCCESS_SUBJECT:UAM Report Generated}
      status: ${APPLICATION_EPRICING_SUCCESS_STATUS:success}
      reachOutEmail: ${APPLICATION_EPRICING_SUCCESS_REACHOUTEMAIL:ep.support@example.com}
template:
  epricing:
    epricing-success-email-template: ${EPRICING_SUCCESS_EMAIL_TEMPLATE:dummy}



dapr:
  service:
    invocation:
      enable: ${DAPR_SERVICE_INVOCATION_ENABLE:true}

secret:
  componentName: ${COMPONENT_NAME:reporting-dapr-secret-store}
  map:
    spring.datasource.password: ${DB_PASSWORD_SECRET:DB_PASSWORD_SECRET}
    sftp.password: ${SFTP_PASSWORD_SECRET:SFTP_PASSWORD_SECRET}
    sftp.private-key: ${SFTP_PRIVATE_KEY_SECRET:SFTP_PRIVATE_KEY_SECRET}

